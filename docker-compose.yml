services:
  # Main application service (FastAPI)
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: interview_analyzer_app
    ports:
      - "8000:8000" # Expose API port
    volumes:
      - .:/workspaces/interview_analyzer_chaining:cached # Mount code for development
    env_file:
      - .env # Load environment variables from .env file
    environment:
      - PYTHONUNBUFFERED=1 # Ensure logs appear immediately
    # If the API needs to wait for Redis (good practice)
    depends_on:
      - redis
    # Command to run the API server (adjust if needed)
    # command: ["make", "run-api"] # Example using Makefile target
    command: ["uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # Redis service for Celery broker/backend
  redis:
    image: redis:7-alpine
    container_name: interview_analyzer_redis
    ports:
      - "6379:6379" # Expose Redis port (optional, for external debugging)
    volumes:
      - redis_data:/data

  # Celery worker service
  worker:
    build:
      context: .
      dockerfile: docker/Dockerfile # Use the same image as the app
    container_name: interview_analyzer_worker
    volumes:
      - .:/workspaces/interview_analyzer_chaining:cached # Mount code
    env_file:
      - .env # Load environment variables
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - redis # Depends on Redis
    command: ["celery", "-A", "src.celery_app", "worker", "--loglevel=info"]

volumes:
  redis_data: # Persist Redis data (optional) 